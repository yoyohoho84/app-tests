{"version":3,"sources":["panels/Home.js","panels/DefaultPanel.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","DefaultPanel","separator","style","display","flexDirection","alignItems","justifyContent","marginTop","fontWeight","fontSize","width","height","backgroundColor","borderRadius","App","useState","activePanel","setActivePanel","setUser","size","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"8iBAYMA,EAAO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAA0B,EAAtBC,GAAsB,EAAlBC,YACtB,OACE,cAAC,IAAD,CAAOF,GAAIA,EAAX,SACE,yCCHAG,EAAe,SAAC,GAA6B,IAA3BH,EAA0B,EAA1BA,GAA0B,EAAtBC,GAAsB,EAAlBC,YAC9B,OACE,eAAC,IAAD,CAAOF,GAAIA,EAAII,WAAW,EAA1B,UACE,cAAC,IAAD,mFADF,IAEE,eAAC,IAAD,CACEC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,UAAW,OACXC,WAAY,OACZC,SAAU,QARd,UAYE,cAAC,IAAD,0NACA,cAAC,IAAD,CACEP,MAAO,CACLQ,MAAO,QACPC,OAAQ,OACRC,gBAAiB,UACjBL,UAAW,OACXM,aAAc,QANlB,uFC2BOC,EAjCH,WAAO,IAAD,EACsBC,mBAAS,iBAD/B,mBACTC,EADS,KACIC,EADJ,OAEeF,mBAAS,MAFxB,mBAEThB,EAFS,KAEImB,EAFJ,OAGYH,mBAAS,cAAC,IAAD,CAAeI,KAAK,WAHzC,mBAGDC,GAHC,WAKhBC,qBAAU,WAAM,4CAQd,4BAAAC,EAAA,sEACqBC,IAAOC,KAAK,uBADjC,OACQC,EADR,OAEEP,EAAQO,GACRL,EAAU,MAHZ,4CARc,sBACdG,IAAOG,WAAU,YAAiC,IAAD,IAA7BC,OAAUC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,KAClC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAL5B,mCAadQ,KACC,IAEH,IAAMxC,EAAK,SAACyC,GACVtB,EAAesB,EAAEC,cAAcC,QAAQC,KAGzC,OACE,eAAC,IAAD,CAAM1B,YAAaA,EAAnB,UACE,cAAC,EAAD,CAAMnB,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAcD,GAAG,gBAAgBE,YAAaA,EAAaD,GAAIA,QC3CrEyB,IAAOC,KAAK,gBAEZmB,IAASC,OAAO,cAAC,EAAD,IAASb,SAASc,eAAe,W","file":"static/js/main.85ce7cab.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  Panel,\n  PanelHeader,\n  Button,\n  Div,\n  Group,\n  Header,\n  Cell,\n} from \"@vkontakte/vkui\";\n\nconst Home = ({ id, go, fetchedUser }) => {\n  return (\n    <Panel id={id}>\n      <div>123</div>\n    </Panel>\n  );\n};\n\nexport { Home };\n","import React from \"react\";\r\n\r\nimport {\r\n  Panel,\r\n  PanelHeader,\r\n  Button,\r\n  Div,\r\n  Group,\r\n  Header,\r\n  Cell,\r\n} from \"@vkontakte/vkui\";\r\n\r\nconst DefaultPanel = ({ id, go, fetchedUser }) => {\r\n  return (\r\n    <Panel id={id} separator={false}>\r\n      <PanelHeader>Какой ты хряк</PanelHeader>;\r\n      <Div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"50px\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"40px\",\r\n          //   width: \"300px\",\r\n        }}\r\n      >\r\n        <Div>Хотите подписаться на наше сообщество?</Div>\r\n        <Button\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"80px\",\r\n            backgroundColor: \"#165df5\",\r\n            marginTop: \"50px\",\r\n            borderRadius: \"45px\",\r\n          }}\r\n        >\r\n          Подписаться\r\n        </Button>\r\n      </Div>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { DefaultPanel };\r\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  View,\n  ScreenSpinner,\n  TabbarItem,\n  Epic,\n  Div,\n  Tabbar,\n  ConfigProvider,\n  ActionSheet,\n  ActionSheetItem,\n  Snackbar,\n  Avatar,\n  CellButton,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport \"./styles/reset.sass\";\nimport \"./styles/panels.sass\";\n\nimport { Home, DefaultPanel } from \"./panels\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"default-panel\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel}>\n      <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n      <DefaultPanel id=\"default-panel\" fetchedUser={fetchedUser} go={go} />\n    </View>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}